{
  "cndi-config": {
    "prompts": [
      {
        "name": "dagRepoUrl",
        "default": "https://github.com/polyseam/demo-dag-bag",
        "message": "Please enter the url of the git repo containing your dags:",
        "type": "Input"
      },
      {
        "name": "argocdDomainName",
        "default": "argocd.example.com",
        "message": "Please enter the domain name you want argocd to be accessible on:",
        "type": "Input"
      },

      {
        "message": "Please enter the email address you want to use for lets encrypt:",
        "default": "admin@example.com",
        "name": "letsEncryptClusterIssuerEmailAddress",
        "type": "Input"
      }
    ],
    "template": {
      "infrastructure": {
        "cndi": {
          "nodes": [
            {
              "name": "cnpg-nodes",
              "kind": "eks",
              "instance_type": "t3.large",
              "volume_size": 128,
              "min_count": 1,
              "max_count": 3
            }
          ]
        }
      },
      "cluster_manifests": {
        "postgresql-connection-string-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "postgresql-connection-string-secret"
          },
          "type": "Opaque",
          "stringData": {
            "connection": "$.cndi.secrets.seal(POSTGRESQL_CONNECTION_STRING)"
          }
        },
        "cnpg-cluster": {
          "apiVersion": "postgresql.cnpg.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cnpg-cluster",
            "namespace": "argocd",
            "annotations": {
              "argocd.argoproj.io/sync-options": {
                "SkipDryRunOnMissingResource": true
              }
            }
          },
          "spec": {
            "imageName": "ghcr.io/cloudnative-pg/postgresql:15.2",
            "instances": 3,
            "storage": {
              "size": "1Gi"
            },
            "replicationSlots": {
              "highAvailability": {
                "enabled": true
              }
            },
            "postgresql": {
              "pg_hba": [
                "host $.cndi.prompts.responses.POSTGRESQL_DB $.cndi.prompts.responses.POSTGRESQL_USER all password"
              ]
            },
            "bootstrap": {
              "initdb": {
                "database": "https://$.cndi.prompts.responses.POSTGRESQL_DB",
                "owner": "https://$.cndi.prompts.responses.POSTGRESQL_USER",
                "secret": {
                  "name": "cnpg-database-user-auth-secret"
                }
              }
            },
            "superuserSecret": {
              "name": "cnpg-cluster-superuser-auth-secret"
            }
          }
        },
        "cnpg-cluster-superuser-auth-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-cluster-superuser-auth-secret",
            "namespace": "argocd"
          },
          "type": "kubernetes.io/basic-auth",
          "stringData": {
            "username": "$.cndi.secrets.seal(POSTGRESQL_CLUSTER_SUPERUSER)",
            "password": "$.cndi.secrets.seal(POSTGRESQL_PASSWORD)"
          }
        },
        "cnpg-database-user-auth-secret": {
          "apiVersion": "v1",
          "kind": "Secret",
          "metadata": {
            "name": "cnpg-database-user-auth-secret",
            "namespace": "argocd"
          },
          "type": "kubernetes.io/basic-auth",
          "stringData": {
            "username": "$.cndi.secrets.seal(POSTGRESQL_USER)",
            "password": "$.cndi.secrets.seal(POSTGRESQL_PASSWORD)"
          }
        },
        "cert-manager-cluster-issuer": {
          "apiVersion": "cert-manager.io/v1",
          "kind": "ClusterIssuer",
          "metadata": {
            "name": "lets-encrypt"
          },
          "spec": {
            "acme": {
              "email": "$.cndi.prompts.responses.letsEncryptClusterIssuerEmailAddress",
              "server": "https://acme-v02.api.letsencrypt.org/directory",
              "privateKeySecretRef": {
                "name": "lets-encrypt-private-key"
              },
              "solvers": [
                {
                  "http01": {
                    "ingress": {
                      "ingressClassName": "public"
                    }
                  }
                }
              ]
            }
          }
        },
        "argo-ingress": {
          "apiVersion": "networking.k8s.io/v1",
          "kind": "Ingress",
          "metadata": {
            "name": "argocd-server-ingress",
            "namespace": "argocd",
            "annotations": {
              "cert-manager.io/cluster-issuer": "lets-encrypt",
              "kubernetes.io/tls-acme": "true",
              "nginx.ingress.kubernetes.io/ssl-passthrough": "true",
              "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
            }
          },
          "spec": {
            "tls": [
              {
                "hosts": [
                  "$.cndi.prompts.responses.argocdDomainName"
                ],
                "secretName": "lets-encrypt-private-key"
              }
            ],
            "rules": [
              {
                "host": "$.cndi.prompts.responses.argocdDomainName",
                "http": {
                  "paths": [
                    {
                      "path": "/",
                      "pathType": "Prefix",
                      "backend": {
                        "service": {
                          "name": "argocd-server",
                          "port": {
                            "name": "https"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "applications": {
        "cnpg": {
          "targetRevision": "0.18.0",
          "destinationNamespace": "cnpg-system",
          "repoURL": "https://cloudnative-pg.github.io/charts",
          "chart": "cloudnative-pg"
        }
      }
    }
  },
  "env": {
    "extend_basic_env": "aws",
    "prompts": [
      {
        "type": "Comment",
        "comment": "PostgreSQL connection parameters"
      },
      {
        "message": "Please enter the name of the postgresql database",
        "default": "cnpg-db",
        "name": "POSTGRESQL_DB",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql user you want to use for your postgresql database:",
        "default": "admin",
        "name": "POSTGRESQL_USER",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql password you want to use for your postgresql database:",
        "default": "password",
        "name": "POSTGRESQL_PASSWORD",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql protocol you want to use for your postgresql database:",
        "name": "POSTGRESQL_PROTOCOL",
        "default": "postgresql",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql host you want to use for your postgresql database:",
        "name": "POSTGRESQL_HOST",
        "default": "cnpg-cluster-rw",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql port you want to use for your postgresql database:",
        "name": "POSTGRESQL_PORT ",
        "default": "5432",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql ssl mode you want to use for your postgresql database:",
        "name": "POSTGRESQL_SSLMODE",
        "default": "disable",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql connection string you want to use to connect your postgresql database:",
        "name": "POSTGRESQL_CONNECTION_STRING",
        "default": "$POSTGRESQL_PROTOCOL://$POSTGRESQL_USER:$POSTGRESQL_PASSWORD@$POSTGRESQL_HOST:$POSTGRESQL_PORT/$POSTGRESQL_DB?$POSTGRESQL_SSLMODE",
        "type": "Input"
      },
      {
        "message": "Please enter the postgresql cluster superuser you want to use for your postgresql cluster:",
        "name": "POSTGRESQL_CLUSTER_SUPERUSER",
        "default": "postgres",
        "type": "Input"
      }
    ]
  },
  "readme": {
    "extend_basic_readme": "aws",
    "template": "## cloudnative-pg\n\nThis template deploys a Standalone production ready posgresql database [cloudnative-pg](https://github.com/cloudnative-pg/charts)"
  }
}
